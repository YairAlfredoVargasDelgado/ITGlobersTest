@page
@model ITGlobersTest.Pages.Autores.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Autor</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Autor.Nombre" class="control-label"></label>
                <input asp-for="Autor.Nombre" class="form-control" />
                <span asp-validation-for="Autor.Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Autor.Apellidos" class="control-label"></label>
                <input asp-for="Autor.Apellidos" class="form-control" />
                <span asp-validation-for="Autor.Apellidos" class="text-danger"></span>
            </div>
            @if (Model.Autor.Libros.Count() > 0)
            {
                <div class="form-group">
                    <label class="control-label">Libros</label>
                    <select class="form-control" asp-for="selectedLibro" asp-items="@(new SelectList(ViewData["libros"] as List<Domain.Libreria.Libro>, "Id", "Titulo"))">
                    </select>
                </div>
            }
            <input type="hidden" asp-for="Autor.Id" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
